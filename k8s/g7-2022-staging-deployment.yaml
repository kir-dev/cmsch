kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: g7-staging
  namespace: org-g7
  labels:
    app.kubernetes.io/name: g7-staging
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: csi.vsphere.vmware.com
  finalizers:
    - kubernetes.io/pvc-protection
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: vsphere
  volumeMode: Filesystem
---
kind: Secret
apiVersion: v1
metadata:
  name: g7-staging-secrets
  namespace: org-g7
data:
  AuthSCH_ID: MjMxMDkxNjg3MjgxODY0MjcwOTg=
  AuthSCH_KEY: >-
    T0NmSkJPcmU0Vk5zZGpFM3lUbUpEZEFMMmlVd1BMY2ROOG5QTVV1R3E4eUtoNENWTm9mUUhnYzBFd3ZUOE54TExiYVh3S2VjSVNtcE1vQlo=
type: Opaque
---
kind: Service
apiVersion: v1
metadata:
  name: g7-staging
  namespace: org-g7
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: g7-staging
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: g7-staging
  namespace: org-g7
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
spec:
  tls:
    - hosts:
        - api.s7.sch.bme.hu
      secretName: g7-staging-cert
  rules:
    - host: api.s7.sch.bme.hu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: g7-staging
                port:
                  number: 80
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: g7-staging
  namespace: org-g7
spec:
  replicas: 1
  selector:
    matchLabels:
      app: g7-staging
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: g7-staging
    spec:
      volumes:
        - name: g7-staging
          persistentVolumeClaim:
            claimName: g7-staging
      containers:
        - name: g7-staging
          image: harbor.sch.bme.hu/org-golyakorte/cmsch:rc
          ports:
            - containerPort: 80
              protocol: TCP
          env:
            - name: SPRING_PROFILES
              value: staging,g72022
            - name: PORT
              value: '80'
            - name: SYSADMINS
              value: 6af3c8b0-592c-6864-8dd9-5f354edfc0be
            - name: PROFILE_SALT
              value: ittaropkealkalom_poroghetszafarkamon_xd
            - name: FRONTEND_URL
              value: https://s7.sch.bme.hu
            - name: JWT_SECRET
              value: a35cdf4d5970d046a888b33a43245e125b28b3ac
            - name: AUTHSCH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: g7-staging-secrets
                  key: AuthSCH_ID
            - name: AUTHSCH_CLIENT_KEY
              valueFrom:
                secretKeyRef:
                  name: g7-staging-secrets
                  key: AuthSCH_KEY
          resources:
            limits:
              cpu: 2
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: g7-staging
              mountPath: /pv
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
